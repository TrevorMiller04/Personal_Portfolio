{
  "Languages": [
    {
      "name": "Python",
      "experience": [
        "Developed REST API endpoints with Flask for contact workflows",
        "Built data processing and visualization scripts",
        "Created automation tools for system tasks",
        "Implemented web scraping utilities with BeautifulSoup and requests",
        "Applied OOP principles in projects and coursework"
      ]
    },
    {
      "name": "JavaScript",
      "experience": [
        "Built interactive modal/gallery systems with carousel functionality",
        "Implemented asynchronous data fetching with JSON APIs",
        "Created responsive interfaces using DOM manipulation and event handling",
        "Used ES6+ features such as async/await and destructuring",
        "Enhanced user experience with client-side validation"
      ]
    },
    {
      "name": "Java",
      "experience": [
        "Implemented data structures including linked lists, stacks, and queues",
        "Developed OOP applications with SOLID principles",
        "Created sorting, searching, and graph traversal algorithms",
        "Built GUIs with Swing in academic projects",
        "Applied inheritance, polymorphism, and encapsulation"
      ]
    }
  ],
  "Frameworks": [
    {
      "name": "Flask",
      "experience": [
        "Built REST APIs with email and database integration",
        "Created serverless functions for Vercel deployments",
        "Added request validation and error handling",
        "Integrated Supabase and Resend services",
        "Followed best practices for HTTP status codes"
      ]
    },
    {
      "name": "React",
      "experience": [
        "Learned component-based architecture",
        "Explored hooks and Context API",
        "Practiced JSX syntax and virtual DOM concepts",
        "Built projects to understand lifecycle",
        "Studied modern build processes"
      ]
    },
    {
      "name": "PyTorch",
      "experience": [
        "Built, trained, and evaluated neural networks",
        "Implemented gradient descent and backpropagation workflows",
        "Applied GPU acceleration for deep learning tasks"
      ]
    },
    {
      "name": "TensorFlow",
      "experience": [
        "Explored model training and deployment in labs",
        "Worked with Keras API for high-level experimentation",
        "Tested model export for serving"
      ]
    },
    {
      "name": "scikit-learn",
      "experience": [
        "Trained supervised/unsupervised ML models",
        "Performed data preprocessing and feature engineering",
        "Evaluated models using cross-validation and metrics"
      ]
    }
  ],
  "Tools/Cloud": [
    {
      "name": "Git/GitHub",
      "experience": [
        "Managed branches and merges",
        "Configured continuous deployment workflows",
        "Wrote clear commit messages",
        "Resolved merge conflicts",
        "Tracked progress with Issues and Projects"
      ]
    },
    {
      "name": "Vercel",
      "experience": [
        "Deployed full-stack applications",
        "Configured serverless Python endpoints",
        "Managed environment variables",
        "Integrated CI/CD from GitHub",
        "Optimized build performance"
      ]
    },
    {
      "name": "Supabase",
      "experience": [
        "Created Postgres schemas and relationships",
        "Applied Row Level Security policies",
        "Integrated realtime CRUD with Python backend",
        "Managed API keys and authentication",
        "Stored contact form data securely"
      ]
    },
    {
      "name": "VS Code/Cursor",
      "experience": [
        "Primary IDE for coursework and projects",
        "Extensions for Python, JS, and web development",
        "Debugging and integrated terminal workflows",
        "Git integration and package management",
        "AI-assisted development with Cursor"
      ]
    }
  ],
  "Coursework": [
    {
      "name": "Data Structures & Algorithms",
      "experience": [
        "Implemented core structures: arrays, linked lists, stacks, queues, hash tables",
        "Analyzed time/space complexity with Big-O",
        "Developed sorting algorithms: quicksort, mergesort, heap sort",
        "Built graph algorithms for paths, MST, traversals",
        "Applied dynamic programming"
      ]
    },
    {
      "name": "Object-Oriented Programming",
      "experience": [
        "Designed hierarchies with inheritance and polymorphism",
        "Implemented patterns like Singleton and Factory",
        "Applied SOLID principles",
        "Handled exceptions for robust programs",
        "Practiced unit testing and debugging"
      ]
    },
    {
      "name": "Software Engineering",
      "experience": [
        "Used Agile practices (Scrum, sprints)",
        "Collaborated with Git in team projects",
        "Applied unit/integration testing and TDD",
        "Created system design and requirements docs",
        "Maintained/refactored for code quality"
      ]
    },
    {
      "name": "ZTM AI Engineering Bootcamp",
      "experience": [
        "Hands-on projects with AWS SageMaker for ML deployment",
        "Trained and deployed models with PyTorch and TensorFlow",
        "Applied scikit-learn for preprocessing and evaluation",
        "Learned MLOps workflows for production",
        "Built end-to-end ML pipelines from training to deployment"
      ]
    },
    {
      "name": "Complete Python Developer in 2025",
      "experience": [
        "Strengthened Python fundamentals and best practices",
        "Worked with advanced OOP and functional programming",
        "Learned testing and debugging workflows",
        "Applied Python for APIs, automation, and data processing",
        "Studied real-world project structures"
      ]
    }
  ]
}
